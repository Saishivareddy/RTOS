[1/12] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[2/12] Linking C static library esp-idf/spiffs/libspiffs.a
[3/12] Performing build step for 'bootloader'
[1/1] cd /home/cdac/Desktop/RTOS/10_Message_Queue/build/bootloader/esp-idf/esptool_py && /home/cdac/.espressif/python_env/idf5.0_py3.10_env/bin/python /home/cdac/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/cdac/Desktop/RTOS/10_Message_Queue/build/bootloader/bootloader.bin
Bootloader binary size 0x66c0 bytes. 0x940 bytes (8%) free.
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/Message_Queue.c.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Building C object CMakeFiles/Message_Queue.elf.dir/project_elf_src_esp32.c.obj
[8/10] Linking CXX executable Message_Queue.elf
[9/10] Generating binary image from built executable
esptool.py v4.2.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/cdac/Desktop/RTOS/10_Message_Queue/build/Message_Queue.bin
[10/10] cd /home/cdac/Desktop/RTOS/10_Message_Queue/build/esp-idf/esptool_py && /home/cdac/.espressif/python_env/idf5.0_py3.10_env/bin/python /home/cdac/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/cdac/Desktop/RTOS/10_Message_Queue/build/partition_table/partition-table.bin /home/cdac/Desktop/RTOS/10_Message_Queue/build/Message_Queue.bin
Message_Queue.bin binary size 0x2afa0 bytes. Smallest app partition is 0x100000 bytes. 0xd5060 bytes (83%) free.
